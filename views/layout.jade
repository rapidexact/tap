doctype html
html
    head
        title= title
        meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
        link(rel='stylesheet', href='/stylesheets/style.css')
        script(src='/javascripts/jquery-3.2.1.js')
        script(src='/javascripts/moment.min.js')
        script(src='/javascripts/zingtouch.js')
        script(src="https://vk.com/js/api/openapi.js?149", type="text/javascript")
        script.
            var userBestScore = 0;
            var counter = 0;
            var timerStarted = 0;
            var timerEnded = 0;
            var timeout = 30;
            var gameEnd = false;
            var gameStarted = false;
            var defaultButtonText = 'Start!';
            var defaultTimerText = '30 sec';
            var gameResult = false;

            $(document).ready(function () {
                userBestScore = localStorage.getItem('userBestScore') || 0;
                $('#toBest').html('Best score: ' + userBestScore);
                var tap = new ZingTouch.Tap({
                    maxDelay: 500,
                    numInputs: 1,
                    tolerance: 125
                });
                var zt = new ZingTouch.Region(document.body);
                zt.bind($('#mainButton p')[0], tap, function (event) {
                    if (gameEnd) {
                        return;
                    }
                    if (counter === 0) {
                        timerStarted = $.now() / 1000;
                        gameStarted = true;
                        timerEnded = timerStarted + timeout;
                        timer();
                    }
                    counter++;
                    update();
                }, false)
                update();
            });

            function setUserBest(best) {
                userBestScore = best;
                localStorage.setItem('userBestScore', userBestScore);
                saveRecord(best);
            }

            function timer() {
                var timerText = moment.unix(timerEnded - ($.now() / 1000)).format('ss[ sec]');
                $('#timer').html(timerText);
                if (timerStarted + (($.now() / 1000) - timerStarted) < timerEnded - 1)
                    setTimeout(timer, 100);
                else {
                    gameEnd = true;
                    if (counter > userBestScore) {
                        setUserBest(counter);
                    }
                    //gameStarted = false;
                    gameResult = timerText;
                    $('.buttons.invisible').removeClass('invisible');
                    update();
                }
            }

            function update() {
                $('#mainButton p').html(counter);
                if (!gameStarted) {
                    $('#mainButton p').html(defaultButtonText);
                    $('#timer').html(defaultTimerText);
                }
                if (gameEnd) {
                    $('#timer').html('Timeâ€™s Up!');
                    $('#mainButton p').html(counter);
                }
            }

            function resetGame() {
                location.reload();
                counter = 0;
                timerStarted = 0;
                timerEnded = 0;
                timeout = 30;
                gameEnd = false;
                gameStarted = false;
                update();
            }

            function firstScreen() {
                if (!location.pathname.startsWith('/ru')) {
                    return;
                }
                $('#vk_auth').css('display', 'inline-block');
                $('#mainButton').css('display', 'none');
                $('.friends.played.list').css('display', 'none');
            }

            function secondScreen() {
                if (!location.pathname.startsWith('/ru')) {
                    return;
                }
                $('#vk_auth').css('display', 'none');
                $('#timer').css('display', 'none');
                $('#intro').css('display', 'none');
                $('#toBest').css('display', 'none');
                $('h1').css('display', 'none');
                $('.friends.played.list').css('display', 'none');

            }

            function showPlayedFriends(friends) {
                console.log('showPlayedFriends', friends.data)
                var resHTML = '';
                for (var i = 0; i < friends.data.length; i++) {
                    resHTML += '<div class="friend"><div class="photo"><img src="' +
                        friends.data[i].photo +
                        '"/></div><div class="username"><p>' +
                        friends.data[i].users_vk.first_name + ' ' + friends.data[i].users_vk.last_name +
                        '</p></div><div class="best-result">' + friends.data[i].best_result + '</div></div>';
                }

                $('.friends.played.list').html(resHTML);

            }

            function thirdScreen() {
                if (!location.pathname.startsWith('/ru')) {
                    return;
                }

                VK.Api.call('friends.getAppUsers', {
                    count: 20,
                }, function (response) {
                    console.log('friends.getAppUsers',response);
                    $.getJSON({
                        url: '/getFriendsGamers',
                        method: 'POST',
                        data: {'ids': response.response},
                        success: showPlayedFriends
                    });
                })



                $('div.friends.invite.list').css('display', 'none');
                $('#mainButton').css('display', 'block');
                $('.friends.played.list').css('display', 'block');
                $('#timer').css('display', 'block');
                $('#vk_auth').css('display', 'none');
                $('#intro').css('display', 'block');
                $('#toBest').css('display', 'block');
                $('h1').css('display', 'block');
            }

        script.
            function displayFriends(friends) {
                console.log('friends');
                console.log(friends);
                var friendsList = $('.friends.list');
                $(friends.response).each(function (index, element) {
                    friendsList.append('<div class="friend"><div class="photo"><img src="' +
                        element.photo_100 +
                        '"/></div><div class="username"><p>' +
                        element.first_name + ' ' + element.last_name +
                        '</p></div><div class="share" onclick="sendMessage(' + element.uid + ')">Share</div></div>');
                });
            }

            function sendMessage(id) {
                VK.Api.call('wall.post', {message: 'Hello !', owner_id: id}, function (response) {
                    thirdScreen();
                });
            }

            function fetchFriends(response) {
                    VK.Api.call('friends.get', {
                        count: 20,
                        fields: 'nickname, photo_50, photo_100, photo_200_orig, online, can_write_private_message, can_see_all_posts, can_post'
                    }, function (response) {
                        displayFriends(response);
                    })
            }

            function f() {
                VK.Api.call('friends.get', {fields: 'nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities'}, function (response) {
                    $(document.body).append(JSON.stringify(response));
                    displayFriends(response);
                })
            }

            function saveRecord(record) {
                $.ajax(location.origin, {
                    data: {record: record},
                    success: function (response) {
                        console.log(response);
                    },
                    fail: function (response) {
                        console.log(response);
                    }
                });
            }

            function vkInit() {
                VK.init({
                    apiId: 6214504
                });
                VK.Auth.login(fetchFriends, 4194307 + 8192);
                secondScreen();
            }

            $(document).ready(function () {
                firstScreen();
                /* if (!location.pathname.startsWith('/ru')) {
                 return;
                 }

                 VK.Auth.getLoginStatus(function (response) {
                 if (response.status === 'unknown') {
                 VK.Auth.login(fetchFriends, 4194307);
                 } else {
                 fetchFriends();
                 }
                 }); */
            });

    style.
        body {
            font-size: 2rem;
            margin: 0;
            padding: 0;
            text-align: center;
            height: 100vh;
            width: 100%;
            /*overflow: scroll;*/
        }

        #toBest {
            text-align: right;
            margin: 1rem 1rem;
            color: #848484;
            font-size: 1rem;
        }

        .button p {
            line-height: 2rem;
            font-size: 5rem;
            margin: 0;
        }

        h1 {
            font-size: 3.5rem;
        }

        h1 > p {
            font-size: 0.8rem;
            margin: -1.5rem 1rem 1rem;
        }

        #timer {
            font-size: 1.5rem;
            margin: 1rem 0.4rem 0rem;
        }

        .button {
            border-radius: 0.5rem;
            margin: 0 auto 1rem;
            width: 80%;
            text-align: center;
            -webkit-user-select: none; /* Chrome, Opera, Safari */
            -moz-user-select: none; /* Firefox 2+ */
            -ms-user-select: none; /* IE 10+ */
            user-select: none; /* Standard syntax */
            cursor: pointer;
            display: block;
            color: black;
        }

        #intro {
            font-size: 0.7rem;
            color: #868686;
        }

        #mainButton {
            background-color: #ff3232;
        }

        #mainButton p {
            font-size: 3rem;
            line-height: 5rem;
        }

        .buttons {
            margin: 1rem auto;
        }

        .buttons p {
            font-size: 1rem;
            line-height: 2.5rem;
            color: #5f5e5e;
        }

        #shareButton {
            background-color: #3cf;
            float: left;
            width: 45%;
        }

        #playAgainButton {
            background-color: #4ae27c;
            float: right;
            width: 45%;
        }

        .invisible {
            visibility: hidden;
        }

        .friends.list p {
            margin: 0;
            height: 2rem;
            font-size: 2rem;
            line-height: 2rem;
        }

        .friends.list .friend div {
            float: left;
        }

        .friends.list .friend {
            display: inline-block;
            width: 100%;
            padding: 1rem 0;
        }

        .friends.list .photo img {
            width: 4rem;
            height: 4rem;
            float: left;
            margin-right: 1rem;
            border-radius: 100px;
        }

        .friends.list .username p {
            line-height: 2rem;
            height: 2rem;
            font-size: 1rem;

        }

        .friends.list .username {
            width: 6rem;
        }

        .friend .best-result{
            line-height: 4rem;
            float: right !important;
        }

        .friends.list .share {
            border-radius: 0.5rem;
            line-height: 4rem;
            margin-left: 1rem;
            position: relative;
            right: 0;
            cursor: pointer;
            width: auto;
            margin-bottom: 0;
            background-color: #507299;
            color: #F4FFF9;
            padding: 0 1rem;
            font-size: 1rem;
        }

        .friends.list .friend {
            width: 17rem;
            margin: 0 auto;
            border-bottom: 0.1rem solid black;
        }

        #vk_auth p {
            line-height: 4rem;
            font-size: 2rem;
            height: 4rem;
        }

        #vk_auth {
            /*width: 10rem;*/
            background-color: #507299;
            color: #F4FFF9;
            height: 4rem;
            display: inline-block;
        }



    body
        block content
